include:
  - template: Security/SAST.gitlab-ci.yml
# https://about.gitlab.com/2017/09/12/vuejs-app-gitlab/
# https://medium.com/joolsoftware/connect-gitlab-with-digitaloceans-kubernetes-439076b9de17
# https://blog.lwolf.org/post/how-to-create-ci-cd-pipeline-with-autodeploy-k8s-gitlab-helm/
stages:
  - build
  - container_build
  - test
  - check_results_update
  - renovate

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

# cache using branch name
# https://gitlab.com/help/ci/caching/index.md
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

# Runnning E2E Test using docker compose and cypress
e2e_test:
  image: docker:27
  stage: test
  tags:
    - mat-web-runner
  retry: 2
  services:
    - docker:27-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - sh test/run_test_in_ci.sh
  only:
    - branches
    - schedules

# Build the application
.build_frontend_template: &build_frontend-template
  image: node:22
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  before_script:
    - yarn install
  script:
    - npx quasar build -m pwa
  artifacts:
    expire_in: 1 week
    paths:
      - dist/pwa

build_frontend_with_placeholder_url:
  <<: *build_frontend-template
  variables:
    MAT2_API_URL_PROD: '$MAT_API_HOST_PLACEHOLDER'
  only:
    - main
    - develop
    - schedules
    - tags
  script:
    - export MAT2_API_URL_PROD='$MAT_API_HOST_PLACEHOLDER'
    - npx quasar build -m pwa

# Publish the container in the registry
.container-build-template: &container-build-template
  image: docker:27.5.1
  tags:
    - mat-web-runner
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  services:
    - docker:27.5.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $CI_COMMIT_REF_SLUG
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: container_build

build_container:
  <<: *container-build-template
  only:
    - main
    - develop

build_tagged_container:
  <<: *container-build-template
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - tags

# Updates the dependencies in this project and creates automated merge requests
renovate:
  stage: renovate
  variables:
    RENOVATE_TOKEN: $GITLAB_API_TOKEN
  image:
    name: renovate/renovate:39
    entrypoint: ['']
  only:
    - schedules
  script:
    - renovate --platform gitlab --endpoint ${CI_API_V4_URL} --token ${GITLAB_API_TOKEN} ${CI_PROJECT_PATH}
